# -*- coding: utf-8 -*-
"""
Created on Fri Sep 15 16:37:21 2023

@author: KITCOOP
"""

import shutil
from konlpy.tag import Okt
import re
import os
​
# Okt 형태소 분석기 초기화
okt = Okt()
​
# 불용어 목록 (필요에 따라 사용자 정의)
stopwords = ['하다', '있다', '되다', '보다', '같다']
​
# 가사 파일이 저장된 디렉토리 경로
lyrics_dir = r'C:\Users\KITCOOP\Desktop\21~40.전'
​
# 결과를 저장할 디렉토리 경로
output_dir = r'C:\Users\KITCOOP\Desktop\songstext'
​
# 결과 디렉토리가 없으면 생성
if not os.path.exists(output_dir):
    os.makedirs(output_dir)
​
# 가사 파일들의 경로 가져오기
lyrics_files = [os.path.join(lyrics_dir, file) for file in os.listdir(lyrics_dir) if file.endswith('.txt')]
​
# 각 가사 파일 별로 전처리 수행 및 결과 저장
for file_path in lyrics_files:
    with open(file_path, 'r', encoding='utf-8') as file:
        # 가사 파일 내용 읽기
        song_lyrics = file.read()
        
        # 가사 텍스트 정제 (예: 특수 문자, 숫자 제거)
        song_lyrics = re.sub(r'[^가-힣\s]', '', song_lyrics)
        
        # 형태소 분석 및 토큰화
        tokens = okt.morphs(song_lyrics)
        
        # 불용어 제거
        filtered_tokens = [word for word in tokens if word not in stopwords]
        
        # 결과를 파일로 저장 (다른 폴더에 저장)
        # 파일 이름을 가사 파일 이름과 동일하게 설정
        output_file_path = os.path.join(output_dir, os.path.basename(file_path))
        with open(output_file_path, 'w', encoding='utf-8') as output_file:
            output_file.write(" ".join(filtered_tokens))
