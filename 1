
# -*- coding: utf-8 -*-
"""
Created on Sat Sep  9 10:53:51 2023

@author: wlstn
"""
import os
import requests
url = "https://vibe.naver.com/track/54692454"  #url맨뒤에 곡정보가 나와있으므로 이 사이트는 GET방식
r = requests.get(url)
r.text

from selenium import webdriver
driver = webdriver.Chrome()  #Chrome을 이용하여 크롤링
driver.get(url) #Chrome을 통해 url에 들어가는 것을 확인할 수 있다.
driver.page_source #우리가 원하는 페이지의 정보를 HTML형태로 보여준다

from bs4 import BeautifulSoup #파이썬은 대소문자를 엄격하게 구분하기 때문에 주의!
bs = BeautifulSoup(driver.page_source) #HTML형태로 된 값을 BeautifulSoup한테 읽어달라하기

bs.find("div",class_="end_section section_lyrics")  #원하는 값의 태그 정보를 이용해 파싱을 할 수 있다.

with open("./윤하-사건의 지평선.txt","w",encoding = "utf-8") as f :
    f.write(bs.find("div",class_="end_section section_lyrics").text)

chart = "https://vibe.naver.com/chart/total"
driver.get(chart)
chart_bs = BeautifulSoup(driver.page_source)
chart_bs.find("div",class_="tracklist").find("td",class_="song")


chart_bs.find("div",class_="tracklist").find("td",class_="song").find("a")["href"].split("/")[-1]

# tml 소스를 이용하여 div -> class:tracklist/ td -> class:song / a ->href
# 이 부분은 문자열을 / 기준으로 분할하고, 그 중에서 마지막 부분을 선택합니다.
# 이것은 주로 URL에서 파일이나 페이지의 이름을 추출할 때 사용됩니다.

total = [] #total = []: 빈 리스트 total을 생성합니다. 이 리스트는 나중에 정보를 저장할 공간입니다.
           #차트에 있는 노래에 대한 숫자가 total이라는 리스트에 담긴다.

for x in chart_bs.find("div",class_="tracklist").findAll("td",class_="song"):
      total.append(x.find("a")['href'].split("/")[-1])
#for x in chart_bs.find("div",class_="tracklist").findAll("td",class_="song")::
#chart_bs에서 class가 "tracklist"인 <div> 태그를 찾고, 그 안에서 class가 "song"인 모든 <td> 태그를 찾습니다.
#이 때, 각각의 <td> 태그를 x로 처리합니다.

#total.append(x.find("a")['href'].split("/")[-1]): 각각의 x에 대해서, 그 안에서 <a> 태그를 찾고,
# 그 태그의 href 속성을 이용하여 링크 주소를 얻습니다. 그리고 나서 이 주소를 /를 기준으로 분할하고,
#그 중에서 마지막 부분을 선택하여 리스트 total에 추가합니다.

#이 코드는 반복문을 사용하여 여러 개의 <td> 요소를 처리하고, 각 요소에서 링크의 마지막 부분을 추출하여
#total 리스트에 추가하는 것입니다.


import time  #selenium은 서버가 로딩하는 시간을 기다려줘야하므로 불러옴
import tqdm  #현재 진행상황을 알 수 있게 해주는 패키지
for song in tqdm.tqdm(total):  #곡에 대한 숫자를 반복문을 통해 song이라는 변수에 하나씩 옮겨줌
    url = f"https://vibe.naver.com/track/{song}"  #고정된 url에 뒤에 숫자만 바꿔줌으로써 유동적으로 진행
    driver.get(url) #url접속
    time.sleep(2) #2초 쉬기
    driver.page_source
    bs = BeautifulSoup(driver.page_source)
    곡명 = bs.find("span", class_="title").text.replace("곡명", "")
    아티스트명 = bs.find("span", class_="sub_title").text.replace("아티스트명", "")
    if not os.path.isdir("./songs/"):  #현재디렉토리 내 songs라는 이름을 가진 파일만들기
        os.mkdir("./songs/")
    with open(f"./songs/{아티스트명}-{곡명}.txt","w",encoding = "utf-8") as f:  #저장하기
        f.write(bs.find("div",class_="end_section section_lyrics").text)
